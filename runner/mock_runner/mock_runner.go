// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ankeesler/wildcat-countdown/runner (interfaces: API,Periodic)

// Package mock_runner is a generated GoMock package.
package mock_runner

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAPI is a mock of API interface
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockAPI) Start(arg0 chan<- error) error {
	ret := m.ctrl.Call(m, "Start", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockAPIMockRecorder) Start(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockAPI)(nil).Start), arg0)
}

// MockPeriodic is a mock of Periodic interface
type MockPeriodic struct {
	ctrl     *gomock.Controller
	recorder *MockPeriodicMockRecorder
}

// MockPeriodicMockRecorder is the mock recorder for MockPeriodic
type MockPeriodicMockRecorder struct {
	mock *MockPeriodic
}

// NewMockPeriodic creates a new mock instance
func NewMockPeriodic(ctrl *gomock.Controller) *MockPeriodic {
	mock := &MockPeriodic{ctrl: ctrl}
	mock.recorder = &MockPeriodicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPeriodic) EXPECT() *MockPeriodicMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockPeriodic) Start() error {
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockPeriodicMockRecorder) Start() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockPeriodic)(nil).Start))
}
